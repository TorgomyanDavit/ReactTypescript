import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit';
import { RootState, AppThunk } from '../../../app/store';
import { incrementAsync } from '../../api/increment';

export interface CounterState {
  value: number;
  text: Object;
}

const initialState: CounterState = {
  value: 0,
  text:""
};

export const counterSlice = createSlice({
  name: 'counter',
  initialState,
  // The `reducers` field lets us define reducers and generate associated actions
  reducers: {
    increment:(state) => {
      state.value += 1
    }
  },
  // The `extraReducers` field lets the slice handle actions defined elsewhere,
  // including actions generated by createAsyncThunk or in other slices.
  extraReducers: (builder) => {
    builder
      .addCase(incrementAsync.fulfilled, (state,action) => {
        console.log(action.payload,"incrementAsync fulfiled");
        state.text = action.payload;
      })
  },
});

export const { increment } = counterSlice.actions;

export default counterSlice.reducer;
